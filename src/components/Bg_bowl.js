/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
*/

import React, { useRef } from 'react'
import { useGLTF, MeshReflectorMaterial } from '@react-three/drei'
import { useFrame } from '@react-three/fiber'
import { WaveMaterial } from '../shaders/WaveMaterial'

export default function BowlStage({ ...props }) {
  const group = useRef()
  const { nodes, materials } = useGLTF('/bg_bowl.glb')

  const ref = useRef()

  useFrame((state, delta) => (ref.current.uTime += delta))
  return (
    <group ref={group} {...props} dispose={null}>
      <mesh
        name="pSphere1"
        castShadow
        receiveShadow
        geometry={nodes.pSphere1.geometry}
        position={[0, 10.46, 0]}
        scale={1102.3}
      >
        <waveMaterial ref={ref} />
        {/* <MeshReflectorMaterial
            blur={[300, 100]}
            resolution={2048}
            mixBlur={1}
            mixStrength={40}
            roughness={1}
            depthScale={1.2}
            minDepthThreshold={0.4}
            maxDepthThreshold={1.4}
            color="#101010"
            metalness={0.5}
          /> */}
          {/* <meshStandardMaterial
          roughness={0}
          metalness={1}
          color="#787878"
           /> */}
      </mesh>
    </group>
  )
}

useGLTF.preload('/bg_bowl.glb')
