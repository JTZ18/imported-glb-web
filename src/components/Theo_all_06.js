/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
*/
import { Flex, Box } from '@react-three/flex'
import React, { useRef, useState } from 'react'
import * as THREE from 'three'
import { Canvas, extend, useFrame, useLoader, useThree } from '@react-three/fiber'
import { useGLTF, PerspectiveCamera, useAnimations, Html, TransformControls, useHelper  } from '@react-three/drei'
import styled from 'styled-components'
import { motion } from 'framer-motion';

export default function FullScene({ ...props }) {
  const group = useRef()
  const { nodes, materials, animations } = useGLTF('/Theo_all_06.glb')
  const { actions } = useAnimations(animations, group)
  const spotlight1 = useRef()
  const spotlight2 = useRef()
  const spotlight3 = useRef()
  const directionalLight = useRef()
  // useHelper(spotlight1, THREE.SpotLightHelper, 'cyan')
  // useHelper(spotlight2, THREE.SpotLightHelper, 'red')
  // useHelper(spotlight3, THREE.SpotLightHelper, 'green')
  // useHelper(directionalLight, THREE.DirectionalLightHelper, 'yellow')
  // const Fire4k = useLoader(THREE.TextureLoader, './Fire4k.png')
  // const [fire4k] = useState(() => new PlainAnimator(Fire4k, 9, 27, 243, 30))

  // const FireGround1 = useLoader(THREE.TextureLoader, './fire-flame-on-ground.png')
  // const [fireGround1] = useState(() => new PlainAnimator(FireGround1, 9, 16, 144, 30))

  // const FireGround2 = useLoader(THREE.TextureLoader, './fire-on-ground-loop.png')
  // const [fireGround2] = useState(() => new PlainAnimator(FireGround2, 9, 16, 144, 30))

  // const FireLoop1 = useLoader(THREE.TextureLoader, './fire-loop.png')
  // const [fireLoop1] = useState(() => new PlainAnimator(FireLoop1, 9, 16, 144, 30))

  // const FireLoop2 = useLoader(THREE.TextureLoader, './Fireloop.png')
  // const [fireLoop2] = useState(() => new PlainAnimator(FireLoop2, 9, 16, 144, 30))

  // const [showFire, setShowFireStatus] = useState(false)
  
  let angle = 0.1
  useFrame((state, delta) => {
    angle -= 0.005
    spotlight1.current.position.x = 2*Math.sin(angle)
    spotlight1.current.position.y = 2*Math.cos(angle)
    spotlight2.current.position.x = 2*Math.cos(angle)
    spotlight2.current.position.y = 2*Math.sin(angle)
    // fire4k.animate()
    // fireGround1.animate()
    // fireGround2.animate()
    // fireLoop1.animate()
    // fireLoop2.animate()
    
    //console.log(spotlight1.current.position)
    
   })


  return (
    <group ref={group} {...props} dispose={null}>
      <spotLight ref={spotlight1} position={[0,0.25,0.5]} intensity={1} penumbra={1} angle={0.53} lookAt={[0,0,0]} color="#FEDD00" />
      <spotLight ref={spotlight2} position={[0,0.25,-0.5]} intensity={1} penumbra={1} angle={0.53} lookAt={[0,0,0]} color="#FEDD00" />
      {/* <spotLight ref={spotlight3} position={[0.5,0.1,0.5]} intensity={2.5} penumbra={1} angle={0.35} color="#FEDD00"/> */}
      {/* <directionalLight ref={directionalLight} castShadow lookAt={[0,0,0]} intensity={1} position={[0.2,2,0.2]}/> */}
      {/* <rectAreaLight position={[-0.1,0.5,0.1]} width={1} height={1} intensity={50} lookAt={[0,0,0]} rotation={[0,Math.PI,0]}/> */}
      <Flex justifyContent="center" alignItems="center">
      <Html centerAnchor scale={0.07} rotation={[0, -3*Math.PI / 4 + 2.5, 0]} position={[-0.21,0.3,0]} transform zIndexRange={[2, 0]} >
          <About 
          onClick={() => {
            console.log(props.aboutStatus)
            props.setAboutStatus(!props.aboutStatus)}}
          variants={containerVariants}
          animate={props.aboutStatus ? "hidden" : "visible"}>
            About
          </About>
      </Html>

      <Html centerAnchor scale={0.07} rotation={[0, -3*Math.PI / 4 + 2.48, 0]} position={[-0.08,0.3,-0.02]} zIndexRange={[2, 0]} transform >
          <FAQ 
          onClick={() => {
            console.log(props.faqStatus)
            props.setFaqStatus(!props.faqStatus)}}
          variants={containerVariants}
          animate={props.faqStatus ? "hidden" : "visible"}>
            FAQ
          </FAQ>
      </Html>

      <Html centerAnchor scale={0.07} rotation={[0, -3*Math.PI / 4 + 2.45, 0]} position={[0.05,0.304,-0.04]} zIndexRange={[2, 0]} transform >
          <Team 
          onClick={() => {
            console.log(props.teamStatus)
            props.setTeamStatus(!props.teamStatus)}}
          variants={containerVariants}
          animate={props.teamStatus ? "hidden" : "visible"}>
            Team
          </Team>
      </Html>

      <Html centerAnchor scale={0.07} rotation={[0, -3*Math.PI / 4 + 2.45, 0]} position={[0.19,0.32,-0.08]} zIndexRange={[2, 0]} transform >
          <Roadmap 
          onClick={() => {
            console.log(props.roadmapStatus)
            props.setRoadmapStatus(!props.roadmapStatus)}}
          variants={containerVariants}
          animate={props.roadmapStatus ? "hidden" : "visible"}>
            Roadmap
          </Roadmap>
      </Html>
      </Flex>
      {/* <primitive object={nodes.mum_rpmlet_midres_rig_mastermum_rpmlet_rig} />
      <group name="theo_dad_root" position={[0, 0, -0.37]}>
        <mesh
          name="Teethdad_hires_mod_mouth_teeth_gum_up"
          castShadow
          receiveShadow
          geometry={nodes.Teethdad_hires_mod_mouth_teeth_gum_up.geometry}
          material={nodes.Teethdad_hires_mod_mouth_teeth_gum_up.material}
        />
        <mesh
          name="Teethdad_hires_mod_mouth_teeth_tooth01_up"
          castShadow
          receiveShadow
          geometry={nodes.Teethdad_hires_mod_mouth_teeth_tooth01_up.geometry}
          material={nodes.Teethdad_hires_mod_mouth_teeth_tooth01_up.material}
        />
        <mesh
          name="Teethdad_hires_mod_mouth_teeth_tooth02_up"
          castShadow
          receiveShadow
          geometry={nodes.Teethdad_hires_mod_mouth_teeth_tooth02_up.geometry}
          material={nodes.Teethdad_hires_mod_mouth_teeth_tooth02_up.material}
        />
        <mesh
          name="Teethdad_hires_mod_mouth_teeth_tooth03_up"
          castShadow
          receiveShadow
          geometry={nodes.Teethdad_hires_mod_mouth_teeth_tooth03_up.geometry}
          material={nodes.Teethdad_hires_mod_mouth_teeth_tooth03_up.material}
        />
        <mesh
          name="Teethdad_hires_mod_mouth_teeth_tooth04_up"
          castShadow
          receiveShadow
          geometry={nodes.Teethdad_hires_mod_mouth_teeth_tooth04_up.geometry}
          material={nodes.Teethdad_hires_mod_mouth_teeth_tooth04_up.material}
        />
        <mesh
          name="Teethdad_hires_mod_mouth_teeth_tooth05_up"
          castShadow
          receiveShadow
          geometry={nodes.Teethdad_hires_mod_mouth_teeth_tooth05_up.geometry}
          material={nodes.Teethdad_hires_mod_mouth_teeth_tooth05_up.material}
        />
        <mesh
          name="Teethdad_hires_mod_mouth_teeth_tooth06_up"
          castShadow
          receiveShadow
          geometry={nodes.Teethdad_hires_mod_mouth_teeth_tooth06_up.geometry}
          material={nodes.Teethdad_hires_mod_mouth_teeth_tooth06_up.material}
        />
        <mesh
          name="Teethdad_hires_mod_mouth_teeth_tooth07_up"
          castShadow
          receiveShadow
          geometry={nodes.Teethdad_hires_mod_mouth_teeth_tooth07_up.geometry}
          material={nodes.Teethdad_hires_mod_mouth_teeth_tooth07_up.material}
        />
        <mesh
          name="Teethdad_hires_mod_mouth_teeth_tooth08_up"
          castShadow
          receiveShadow
          geometry={nodes.Teethdad_hires_mod_mouth_teeth_tooth08_up.geometry}
          material={nodes.Teethdad_hires_mod_mouth_teeth_tooth08_up.material}
        />
        <mesh
          name="Teethdad_hires_mod_mouth_teeth_tooth09_up"
          castShadow
          receiveShadow
          geometry={nodes.Teethdad_hires_mod_mouth_teeth_tooth09_up.geometry}
          material={nodes.Teethdad_hires_mod_mouth_teeth_tooth09_up.material}
        />
        <mesh
          name="Teethdad_hires_mod_mouth_teeth_tooth10_up"
          castShadow
          receiveShadow
          geometry={nodes.Teethdad_hires_mod_mouth_teeth_tooth10_up.geometry}
          material={nodes.Teethdad_hires_mod_mouth_teeth_tooth10_up.material}
        />
        <mesh
          name="Teethdad_hires_mod_mouth_teeth_tooth11_up"
          castShadow
          receiveShadow
          geometry={nodes.Teethdad_hires_mod_mouth_teeth_tooth11_up.geometry}
          material={nodes.Teethdad_hires_mod_mouth_teeth_tooth11_up.material}
        />
        <mesh
          name="Teethdad_hires_mod_mouth_teeth_tooth12_up"
          castShadow
          receiveShadow
          geometry={nodes.Teethdad_hires_mod_mouth_teeth_tooth12_up.geometry}
          material={nodes.Teethdad_hires_mod_mouth_teeth_tooth12_up.material}
        />
        <mesh
          name="Teethdad_hires_mod_mouth_teeth_gum_dwn"
          castShadow
          receiveShadow
          geometry={nodes.Teethdad_hires_mod_mouth_teeth_gum_dwn.geometry}
          material={nodes.Teethdad_hires_mod_mouth_teeth_gum_dwn.material}
        />
        <mesh
          name="Teethdad_hires_mod_mouth_teeth_tooth01_dwn"
          castShadow
          receiveShadow
          geometry={nodes.Teethdad_hires_mod_mouth_teeth_tooth01_dwn.geometry}
          material={nodes.Teethdad_hires_mod_mouth_teeth_tooth01_dwn.material}
        />
        <mesh
          name="Teethdad_hires_mod_mouth_teeth_tooth02_dwn"
          castShadow
          receiveShadow
          geometry={nodes.Teethdad_hires_mod_mouth_teeth_tooth02_dwn.geometry}
          material={nodes.Teethdad_hires_mod_mouth_teeth_tooth02_dwn.material}
        />
        <mesh
          name="Teethdad_hires_mod_mouth_teeth_tooth03_dwn"
          castShadow
          receiveShadow
          geometry={nodes.Teethdad_hires_mod_mouth_teeth_tooth03_dwn.geometry}
          material={nodes.Teethdad_hires_mod_mouth_teeth_tooth03_dwn.material}
        />
        <mesh
          name="Teethdad_hires_mod_mouth_teeth_tooth04_dwn"
          castShadow
          receiveShadow
          geometry={nodes.Teethdad_hires_mod_mouth_teeth_tooth04_dwn.geometry}
          material={nodes.Teethdad_hires_mod_mouth_teeth_tooth04_dwn.material}
        />
        <mesh
          name="Teethdad_hires_mod_mouth_teeth_tooth05_dwn"
          castShadow
          receiveShadow
          geometry={nodes.Teethdad_hires_mod_mouth_teeth_tooth05_dwn.geometry}
          material={nodes.Teethdad_hires_mod_mouth_teeth_tooth05_dwn.material}
        />
        <mesh
          name="Teethdad_hires_mod_mouth_teeth_tooth06_dwn"
          castShadow
          receiveShadow
          geometry={nodes.Teethdad_hires_mod_mouth_teeth_tooth06_dwn.geometry}
          material={nodes.Teethdad_hires_mod_mouth_teeth_tooth06_dwn.material}
        />
        <mesh
          name="Teethdad_hires_mod_mouth_teeth_tooth07_dwn"
          castShadow
          receiveShadow
          geometry={nodes.Teethdad_hires_mod_mouth_teeth_tooth07_dwn.geometry}
          material={nodes.Teethdad_hires_mod_mouth_teeth_tooth07_dwn.material}
        />
        <mesh
          name="Teethdad_hires_mod_mouth_teeth_tooth08_dwn"
          castShadow
          receiveShadow
          geometry={nodes.Teethdad_hires_mod_mouth_teeth_tooth08_dwn.geometry}
          material={nodes.Teethdad_hires_mod_mouth_teeth_tooth08_dwn.material}
        />
        <mesh
          name="Teethdad_hires_mod_mouth_teeth_tooth09_dwn"
          castShadow
          receiveShadow
          geometry={nodes.Teethdad_hires_mod_mouth_teeth_tooth09_dwn.geometry}
          material={nodes.Teethdad_hires_mod_mouth_teeth_tooth09_dwn.material}
        />
        <mesh
          name="Teethdad_hires_mod_mouth_teeth_tooth10_dwn"
          castShadow
          receiveShadow
          geometry={nodes.Teethdad_hires_mod_mouth_teeth_tooth10_dwn.geometry}
          material={nodes.Teethdad_hires_mod_mouth_teeth_tooth10_dwn.material}
        />
        <mesh
          name="Teethdad_hires_mod_mouth_teeth_tooth11_dwn"
          castShadow
          receiveShadow
          geometry={nodes.Teethdad_hires_mod_mouth_teeth_tooth11_dwn.geometry}
          material={nodes.Teethdad_hires_mod_mouth_teeth_tooth11_dwn.material}
        />
        <mesh
          name="Teethdad_hires_mod_mouth_teeth_tooth12_dwn"
          castShadow
          receiveShadow
          geometry={nodes.Teethdad_hires_mod_mouth_teeth_tooth12_dwn.geometry}
          material={nodes.Teethdad_hires_mod_mouth_teeth_tooth12_dwn.material}
        />
        <mesh
          name="Teethdad_hires_mod_mouth_tongue"
          castShadow
          receiveShadow
          geometry={nodes.Teethdad_hires_mod_mouth_tongue.geometry}
          material={nodes.Teethdad_hires_mod_mouth_tongue.material}
        />
        <mesh
          name="theo_dad_hat_01"
          castShadow
          receiveShadow
          geometry={nodes.theo_dad_hat_01.geometry}
          material={nodes.theo_dad_hat_01.material}
        />
        <mesh
          name="theo_dad_hat_05"
          castShadow
          receiveShadow
          geometry={nodes.theo_dad_hat_05.geometry}
          material={nodes.theo_dad_hat_05.material}
        />
        <mesh
          name="theo_dad_hat_06"
          castShadow
          receiveShadow
          geometry={nodes.theo_dad_hat_06.geometry}
          material={nodes.theo_dad_hat_06.material}
        />
        <mesh
          name="theo_dad_hat_07"
          castShadow
          receiveShadow
          geometry={nodes.theo_dad_hat_07.geometry}
          material={nodes.theo_dad_hat_07.material}
        />
        <mesh
          name="theo_dad_hat_02"
          castShadow
          receiveShadow
          geometry={nodes.theo_dad_hat_02.geometry}
          material={nodes.theo_dad_hat_02.material}
        />
        <group name="theo_dad_cape" position={[0.09, 0, 0.4]} rotation={[-0.47, 0.21, 0.63]}>
          <mesh
            name="theo_dad_cloak_01"
            castShadow
            receiveShadow
            geometry={nodes.theo_dad_cloak_01.geometry}
            material={nodes.theo_dad_cloak_01.material}
          />
        </group>
      </group> */}
      <PerspectiveCamera
        name="camera2"
        makeDefault={false}
        far={50}
        near={0.05}
        fov={81.2}
        position={[0.04, 0.08, 0.36]}
        rotation={[0, 0.11, 0]}
      />
      {/* <mesh
        name="Cape6"
        castShadow
        receiveShadow
        geometry={nodes.Cape6.geometry}
        material={nodes.Cape6.material}
        position={[0, 0.09, -0.03]}
        scale={4.53}
      />
      <mesh
        name="Theo3_Theo_Legs13"
        castShadow
        receiveShadow
        geometry={nodes.Theo3_Theo_Legs13.geometry}
        material={nodes.Theo3_Theo_Legs13.material}
      /> */}
      
      {/* <mesh
        name="Fire_01"
        castShadow
        receiveShadow
        geometry={nodes.Fire_01.geometry}
        position={[-0.04, 0.17, -0.22]}
        rotation={[Math.PI / 2, Math.PI, 0.25 - Math.PI/8]}
        scale={[81.7, 5.11, 45.95]}
      >
        <meshLambertMaterial map={FireGround1} transparent={true} toneMapped={false} depthWrite={false}/>
      </mesh>
      <mesh
        name="Fire_02"
        castShadow
        receiveShadow
        geometry={nodes.Fire_02.geometry}
        position={[-0.29, 0.27, -0.25]}
        rotation={[-Math.PI / 2, Math.PI, -1.92 - 7*Math.PI/16]}
        scale={[84.57, 6.51, -58.62]}
      >
        <meshLambertMaterial map={FireGround2} transparent={true} toneMapped={false} depthWrite={false} />

      </mesh>
      <mesh
        name="Fire_03"
        castShadow
        receiveShadow
        geometry={nodes.Fire_03.geometry}
        position={[0.14, 0.19, -0.25]}
        rotation={[Math.PI / 2, Math.PI, 0.19 - 9*Math.PI/32]}
        scale={[72.54, 4.62, 38.25]}
      >
        <meshLambertMaterial map={FireLoop1} transparent={true} toneMapped={false} depthWrite={false} />
      </mesh>
      <mesh
        name="Fire_04"
        castShadow
        receiveShadow
        geometry={nodes.Fire_04.geometry}
        position={[0.25, 0.19, -0.25]}
        rotation={[Math.PI / 2, Math.PI, 0.54 - 14*Math.PI/32]}
        scale={[71.99, 4.5, 57.45]}
      >
        <meshLambertMaterial transparent={true} map={FireLoop2} toneMapped={false} depthWrite={false}/>
      </mesh>
      <mesh
        name="Fire_05"
        castShadow
        receiveShadow
        geometry={nodes.Fire_05.geometry}
        position={[0.01, 0.14, -0.06]}
        rotation={[Math.PI / 2, Math.PI, 0.08 + 5*Math.PI/32]}
        scale={[72.59, 3.92, 35.31]}
      >
        <meshLambertMaterial transparent={true} map={FireLoop2} toneMapped={false} depthWrite={false}/>
      </mesh> */}
      
      {/* <mesh
        name="pSphere1"
        castShadow
        receiveShadow
        geometry={nodes.pSphere1.geometry}
        material={nodes.pSphere1.material}
        position={[0, 10.46, 0]}
        scale={1102.3}
      /> */}
    </group>
  )
}

useGLTF.preload('/Theo_all_06.glb')

const About = styled(motion.div)`
  cursor: pointer;
  outline: none;
  border: none;
  font-size: 8px;
  font-weight: 300;
  background: black;
  color: #f0f0f0;
  padding: 2px 10px;
  border-radius: 20px;
  letter-spacing: 1px;
  display: flex;
  justify-content: center;
  align-items: center;
  gap: 10px;
  z-index: 1;
`

const FAQ = styled(About)`
`

const Team = styled(About)`
`
const Roadmap = styled(About)`
`

const containerVariants = {
  hidden: { 
    scale: 0,
    opacity: 0,
  },
  visible: {
    scale: 1,
    opacity: 1,
    transition: {
      duration: 1, type: 'spring', stiffness: 120
    }
  }
}